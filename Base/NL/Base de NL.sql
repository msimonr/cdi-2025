-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Authors"
(
    idauthor numeric NOT NULL,
    author text COLLATE pg_catalog."default",
    CONSTRAINT "Authors_pkey" PRIMARY KEY (idauthor)
);

CREATE TABLE IF NOT EXISTS public."Books"
(
    id text COLLATE pg_catalog."default",
    title text COLLATE pg_catalog."default",
    author_id numeric,
    published_date text COLLATE pg_catalog."default",
    publisher text COLLATE pg_catalog."default",
    image_url_s text COLLATE pg_catalog."default",
    image_url_m text COLLATE pg_catalog."default",
    image_url_l text COLLATE pg_catalog."default",
    categories text COLLATE pg_catalog."default",
    price numeric,
    description text COLLATE pg_catalog."default",
    image text COLLATE pg_catalog."default",
    infolink text COLLATE pg_catalog."default",
    previewlink text COLLATE pg_catalog."default",
    id_gen serial NOT NULL,
    CONSTRAINT "Books_pkey" PRIMARY KEY (id_gen),
    CONSTRAINT "Books_id_key" UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public."Ratings"
(
    id_gen serial NOT NULL,
    id text COLLATE pg_catalog."default",
    title text COLLATE pg_catalog."default",
    price numeric,
    user_id text COLLATE pg_catalog."default",
    profile_name text COLLATE pg_catalog."default",
    helpfulness text COLLATE pg_catalog."default",
    score numeric,
    "time" text COLLATE pg_catalog."default",
    summary text COLLATE pg_catalog."default",
    review text COLLATE pg_catalog."default",
    CONSTRAINT "Ratings_pkey" PRIMARY KEY (id_gen)
);

CREATE TABLE IF NOT EXISTS public."Users"
(
    user_id numeric NOT NULL,
    location text COLLATE pg_catalog."default",
    age numeric,
    CONSTRAINT "Users_pkey" PRIMARY KEY (user_id)
);

ALTER TABLE IF EXISTS public."Books"
    ADD CONSTRAINT fk_author_id FOREIGN KEY (author_id)
    REFERENCES public."Authors" (idauthor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Ratings"
    ADD CONSTRAINT "Ratings_Id_fkey" FOREIGN KEY (id)
    REFERENCES public."Books" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;