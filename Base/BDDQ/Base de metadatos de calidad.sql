-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."ApMethods"
(
    id_ap_method text COLLATE pg_catalog."default" NOT NULL,
    id_method text COLLATE pg_catalog."default" NOT NULL,
    "isAggregation" boolean NOT NULL,
    "granularityAggregation" text COLLATE pg_catalog."default",
    CONSTRAINT "ApMethods_pkey" PRIMARY KEY (id_ap_method)
);

CREATE TABLE IF NOT EXISTS public."Dimensions"
(
    id_dim text COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Dimensions_pkey" PRIMARY KEY (id_dim),
    CONSTRAINT name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public."Executions"
(
    id_exec serial NOT NULL,
    execution_date timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT "Executions_pkey" PRIMARY KEY (id_exec)
);

CREATE TABLE IF NOT EXISTS public."Factors"
(
    id_factor text COLLATE pg_catalog."default" NOT NULL,
    id_dim text COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Factors_pkey" PRIMARY KEY (id_factor),
    CONSTRAINT nombre UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public."Methods"
(
    id_method text COLLATE pg_catalog."default" NOT NULL,
    id_metric text COLLATE pg_catalog."default" NOT NULL,
    "outputDataType" text COLLATE pg_catalog."default" NOT NULL,
    "inputDataType" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Methods_pkey" PRIMARY KEY (id_method)
);

CREATE TABLE IF NOT EXISTS public."Metrics"
(
    id_metric text COLLATE pg_catalog."default" NOT NULL,
    id_factor text COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    granularity text COLLATE pg_catalog."default" NOT NULL,
    domain text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Metrics_pkey" PRIMARY KEY (id_metric)
);

CREATE TABLE IF NOT EXISTS public."ResultCellRow"
(
    target_table text COLLATE pg_catalog."default" NOT NULL,
    id_exec integer NOT NULL,
    id_ap_method text COLLATE pg_catalog."default" NOT NULL,
    "row" text COLLATE pg_catalog."default" NOT NULL,
    attribute text COLLATE pg_catalog."default" NOT NULL DEFAULT ''::text,
    dq_value numeric NOT NULL,
    CONSTRAINT "ResultCellRow_pkey" PRIMARY KEY (target_table, id_exec, id_ap_method, "row", attribute)
);

CREATE TABLE IF NOT EXISTS public."ResultColumn"
(
    target_table text COLLATE pg_catalog."default" NOT NULL,
    id_ap_method text COLLATE pg_catalog."default" NOT NULL,
    attribute text COLLATE pg_catalog."default" NOT NULL,
    dq_value numeric NOT NULL,
    id_exec integer NOT NULL,
    CONSTRAINT "ResultColumn_pkey" PRIMARY KEY (target_table, id_ap_method, attribute, id_exec)
);

CREATE TABLE IF NOT EXISTS public."ResultTable"
(
    target_table text COLLATE pg_catalog."default" NOT NULL,
    id_ap_method text COLLATE pg_catalog."default" NOT NULL,
    dq_value numeric NOT NULL,
    id_exec integer NOT NULL,
    CONSTRAINT "ResultTable_pkey" PRIMARY KEY (target_table, id_ap_method, id_exec)
);

CREATE TABLE IF NOT EXISTS public."UserEvaluations"
(
    id_ap_method text COLLATE pg_catalog."default" NOT NULL,
    id_user bigint NOT NULL,
    min_threshold numeric NOT NULL,
    CONSTRAINT "UserEvaluations_pkey" PRIMARY KEY (id_user, id_ap_method)
);

CREATE TABLE IF NOT EXISTS public."Users"
(
    id_gen serial NOT NULL,
    rol text COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Users_pkey" PRIMARY KEY (id_gen)
);

ALTER TABLE IF EXISTS public."ApMethods"
    ADD CONSTRAINT "ApMethods_id_method_fkey" FOREIGN KEY (id_method)
    REFERENCES public."Methods" (id_method) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Factors"
    ADD CONSTRAINT dimension FOREIGN KEY (id_dim)
    REFERENCES public."Dimensions" (id_dim) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Methods"
    ADD CONSTRAINT "Methods_id_metric_fkey" FOREIGN KEY (id_metric)
    REFERENCES public."Metrics" (id_metric) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Metrics"
    ADD CONSTRAINT factor FOREIGN KEY (id_factor)
    REFERENCES public."Factors" (id_factor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."ResultCellRow"
    ADD CONSTRAINT "ResultCellRow_id_ap_method_fkey" FOREIGN KEY (id_ap_method)
    REFERENCES public."ApMethods" (id_ap_method) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ResultCellRow"
    ADD CONSTRAINT "ResultCellRow_id_exec_fkey" FOREIGN KEY (id_exec)
    REFERENCES public."Executions" (id_exec) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."ResultColumn"
    ADD CONSTRAINT "ResultColumn_id_ap_method_fkey" FOREIGN KEY (id_ap_method)
    REFERENCES public."ApMethods" (id_ap_method) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."ResultColumn"
    ADD CONSTRAINT "ResultColumn_id_exec_fkey" FOREIGN KEY (id_exec)
    REFERENCES public."Executions" (id_exec) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ResultTable"
    ADD CONSTRAINT "ResultTable_id_ap_method_fkey" FOREIGN KEY (id_ap_method)
    REFERENCES public."ApMethods" (id_ap_method) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."ResultTable"
    ADD CONSTRAINT "exec" FOREIGN KEY (id_exec)
    REFERENCES public."Executions" (id_exec) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."UserEvaluations"
    ADD CONSTRAINT "UserEvaluations_id_user_fkey" FOREIGN KEY (id_user)
    REFERENCES public."Users" (id_gen) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."UserEvaluations"
    ADD CONSTRAINT userapmethod FOREIGN KEY (id_ap_method)
    REFERENCES public."ApMethods" (id_ap_method) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;